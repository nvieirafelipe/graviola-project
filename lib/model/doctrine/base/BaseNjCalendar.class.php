<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('NjCalendar', 'doctrine');

/**
 * BaseNjCalendar
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $description
 * @property string $detail
 * @property boolean $monday
 * @property boolean $tuesday
 * @property boolean $wednesday
 * @property boolean $thursday
 * @property boolean $friday
 * @property boolean $saturday
 * @property boolean $sunday
 * @property date $end_date
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Doctrine_Collection $NjTrips
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method string              getDetail()      Returns the current record's "detail" value
 * @method boolean             getMonday()      Returns the current record's "monday" value
 * @method boolean             getTuesday()     Returns the current record's "tuesday" value
 * @method boolean             getWednesday()   Returns the current record's "wednesday" value
 * @method boolean             getThursday()    Returns the current record's "thursday" value
 * @method boolean             getFriday()      Returns the current record's "friday" value
 * @method boolean             getSaturday()    Returns the current record's "saturday" value
 * @method boolean             getSunday()      Returns the current record's "sunday" value
 * @method date                getEndDate()     Returns the current record's "end_date" value
 * @method timestamp           getCreatedAt()   Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()   Returns the current record's "updated_at" value
 * @method Doctrine_Collection getNjTrips()     Returns the current record's "NjTrips" collection
 * @method NjCalendar          setId()          Sets the current record's "id" value
 * @method NjCalendar          setDescription() Sets the current record's "description" value
 * @method NjCalendar          setDetail()      Sets the current record's "detail" value
 * @method NjCalendar          setMonday()      Sets the current record's "monday" value
 * @method NjCalendar          setTuesday()     Sets the current record's "tuesday" value
 * @method NjCalendar          setWednesday()   Sets the current record's "wednesday" value
 * @method NjCalendar          setThursday()    Sets the current record's "thursday" value
 * @method NjCalendar          setFriday()      Sets the current record's "friday" value
 * @method NjCalendar          setSaturday()    Sets the current record's "saturday" value
 * @method NjCalendar          setSunday()      Sets the current record's "sunday" value
 * @method NjCalendar          setEndDate()     Sets the current record's "end_date" value
 * @method NjCalendar          setCreatedAt()   Sets the current record's "created_at" value
 * @method NjCalendar          setUpdatedAt()   Sets the current record's "updated_at" value
 * @method NjCalendar          setNjTrips()     Sets the current record's "NjTrips" collection
 * 
 * @package    graviola
 * @subpackage model
 * @author     Felipe Vieira         <nvieirafelipe@gmail.com>;
               Jean Frizo            <jfrizo@gmail.com>;
               Rafael Mardegan       <mardegan.rafael@gmail.com>;
               Yohan Ara√∫jo          <yohanaraujo07@gmail.com>;
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNjCalendar extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('nj_calendar');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('description', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('detail', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('monday', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('tuesday', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('wednesday', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('thursday', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('friday', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('saturday', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('sunday', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('end_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('NjTrip as NjTrips', array(
             'local' => 'id',
             'foreign' => 'nj_calendar_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}