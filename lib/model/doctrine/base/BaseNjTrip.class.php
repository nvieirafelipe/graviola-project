<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('NjTrip', 'doctrine');

/**
 * BaseNjTrip
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $nj_calendar_id
 * @property integer $nj_route_id
 * @property integer $nj_vehicle_id
 * @property boolean $direction_id
 * @property string $description
 * @property string $detail
 * @property clob $polyline
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property NjCalendar $NjCalendar
 * @property NjRoute $NjRoute
 * @property NjVehicle $NjVehicle
 * @property Doctrine_Collection $NjStopTimes
 * @property Doctrine_Collection $NjRuns
 * @property Doctrine_Collection $Njnotifications
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method integer             getNjCalendarId()    Returns the current record's "nj_calendar_id" value
 * @method integer             getNjRouteId()       Returns the current record's "nj_route_id" value
 * @method integer             getNjVehicleId()     Returns the current record's "nj_vehicle_id" value
 * @method boolean             getDirectionId()     Returns the current record's "direction_id" value
 * @method string              getDescription()     Returns the current record's "description" value
 * @method string              getDetail()          Returns the current record's "detail" value
 * @method clob                getPolyline()        Returns the current record's "polyline" value
 * @method timestamp           getCreatedAt()       Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()       Returns the current record's "updated_at" value
 * @method NjCalendar          getNjCalendar()      Returns the current record's "NjCalendar" value
 * @method NjRoute             getNjRoute()         Returns the current record's "NjRoute" value
 * @method NjVehicle           getNjVehicle()       Returns the current record's "NjVehicle" value
 * @method Doctrine_Collection getNjStopTimes()     Returns the current record's "NjStopTimes" collection
 * @method Doctrine_Collection getNjRuns()          Returns the current record's "NjRuns" collection
 * @method Doctrine_Collection getNjnotifications() Returns the current record's "Njnotifications" collection
 * @method NjTrip              setId()              Sets the current record's "id" value
 * @method NjTrip              setNjCalendarId()    Sets the current record's "nj_calendar_id" value
 * @method NjTrip              setNjRouteId()       Sets the current record's "nj_route_id" value
 * @method NjTrip              setNjVehicleId()     Sets the current record's "nj_vehicle_id" value
 * @method NjTrip              setDirectionId()     Sets the current record's "direction_id" value
 * @method NjTrip              setDescription()     Sets the current record's "description" value
 * @method NjTrip              setDetail()          Sets the current record's "detail" value
 * @method NjTrip              setPolyline()        Sets the current record's "polyline" value
 * @method NjTrip              setCreatedAt()       Sets the current record's "created_at" value
 * @method NjTrip              setUpdatedAt()       Sets the current record's "updated_at" value
 * @method NjTrip              setNjCalendar()      Sets the current record's "NjCalendar" value
 * @method NjTrip              setNjRoute()         Sets the current record's "NjRoute" value
 * @method NjTrip              setNjVehicle()       Sets the current record's "NjVehicle" value
 * @method NjTrip              setNjStopTimes()     Sets the current record's "NjStopTimes" collection
 * @method NjTrip              setNjRuns()          Sets the current record's "NjRuns" collection
 * @method NjTrip              setNjnotifications() Sets the current record's "Njnotifications" collection
 * 
 * @package    graviola
 * @subpackage model
 * @author     Felipe Vieira         <nvieirafelipe@gmail.com>;
               Jean Frizo            <jfrizo@gmail.com>;
               Rafael Mardegan       <mardegan.rafael@gmail.com>;
               Yohan Ara√∫jo          <yohanaraujo07@gmail.com>;
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNjTrip extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('nj_trip');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('nj_calendar_id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('nj_route_id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('nj_vehicle_id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('direction_id', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('description', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('detail', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('polyline', 'clob', null, array(
             'type' => 'clob',
             'notnull' => false,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('NjCalendar', array(
             'local' => 'nj_calendar_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('NjRoute', array(
             'local' => 'nj_route_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('NjVehicle', array(
             'local' => 'nj_vehicle_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('NjStopTime as NjStopTimes', array(
             'local' => 'id',
             'foreign' => 'nj_trip_id'));

        $this->hasMany('NjRun as NjRuns', array(
             'local' => 'id',
             'foreign' => 'nj_trip_id'));

        $this->hasMany('NjNotification as Njnotifications', array(
             'local' => 'id',
             'foreign' => 'nj_trip_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}